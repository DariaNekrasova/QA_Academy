UI-автоматизация Part 3:
------------------------------------------------------------- Selenium-grid (без практического примера) ------------------------------------------------------------------

Selenium Grid - это инструмент, который распределяет тесты на нескольких
физических или виртуальных машинах, чтобы мы могли выполнять скрипты параллельно.
Это значительно ускоряет процесс тестирования в браузерах и на разных платформах,
предоставляя нам быструю и точную обратную связь.

Selenium Grid позволяет нам выполнять несколько экземпляров тестов WebDriver или Selenium
Remote Control параллельно, которые используют одну и ту же базу кода, поэтому код НЕ
должен присутствовать в системе, которую они выполняют. Селен-сервер-автономный пакет
включает в себя концентратор, WebDriver и Selenium RC для выполнения сценариев в сетке.

Selenium Grid имеет концентратор и узел.

Hub - концентратор также можно понимать как сервер, который выступает в качестве
центральной точки, где будут запускаться тесты. Селеновая сетка имеет только один
концентратор и запускается на одной машине один раз.
Node - Узлы являются Селен экземплярами, которые прикреплены к концентратору , которые
выполняют тесты. В сетке может быть один или несколько узлов, которые могут быть любой
ОС и могут содержать любой из поддерживаемых селеном браузеров.
Чтобы работать с сеткой, мы должны следовать определенным протоколам. Ниже перечислены
основные шаги, связанные с этим процессом -

Настройка концентратора
Настройка узлов
Разработка сценария и подготовка файла XML
Тестирование
Анализ результатов

https://www.seleniumhq.org/docs/07_selenium_grid.jsp
Настраиваем Selenium Grid за 5 минут:
http://automation-remarks.com/nastraivaiem-selenium-grid-za-5-minut/
https://selenium2.ru/docs/selenium-grid.html
------------------------------------------------------------- Selenide - плюсы и минусы, отличия от Selenium -------------------------------------------------------------

Selenium WebDriver - отличный инструмент.
Но это не инструмент для тестирования.
Это инструмент для управления браузером.

А Selenide - удобный инструмент для автоматических тестов,
построенный на базе Selenium WebDriver.

Почему понадобился ещё один враппер для Selenium?
Да, есть и другие “обёртки” для Selenium webdriver.
Но нам кажется, что все они не решают главные проблемы UI тестов.
А именно, нестабильность тестов, веб-приложения с динамическим контентом,
JavaScript, Ajax, таймауты и т.д. Selenide был создан для решения этих проблем.

А ещё Selenide очень простой для изучения. С ним каждый может начать писать
автоматические тесты буквально за 5 минут, даже те, кто не имеет никакого
опыта в тестировании. И даже разработчики!

Прежде всего, Selenide помогает вам делать стабильные тесты, решая (почти) все проблемы с таймаутами и аяксом.

Selenide предлагает лаконичный API для использования Selenium WebDriver в UI тестах:

Умные ожидания
Автоматическое управление браузером (открытие, закрытие - вам больше не придётся об этом думать)
Удобные методы
Поддержка Ajax
Автоматические скриншоты
Подробности ниже.

Автоматическое управление браузером
Вам больше не надо явно открывать браузер и думать о том, где его хранить и когда закрывать.
Selenide сам откроет браузер, когда он впервые понадобится, и закроет, когда он больше не будет нужен.

Удобные методы
Selenide предлагает лаконичный и мощный API, который поможет вам писать короткие и хорошо читаемые тесты.
Selenide есть масса удобных методов для заполнения полей, выбора чекбоксов, выпадающих списков,
поиска элементов по тексту и т.д.

Поддержка Ajax
При тестировании современных динамичных приложений, полных аякса и яваскрипта,
нам часто нужно подождать, пока изменится состояние какого-либо элемента.
Selenide делает это из коробки. Автоматически. Вам даже не нужно задумываться
о том, требуется ли ожидание в том или ином месте.

Selenide vs Selenium:
https://ru.selenide.org/documentation/selenide-vs-selenium.html
Selenide документация:
https://ru.selenide.org/documentation.html

------------------------------------------------------------- Локальный и удаленный запуск тестов ------------------------------------------------------------------------
???


Практика:
Практические упражнения (автоматизация существующих фич RiskMarket).
Описание отдельных степов, реализация более сложных кейсов,
Начать писать полноценный фреймворк UI тестирования