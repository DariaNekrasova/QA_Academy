Part 1
Понятие REST API
Cервис, контроллер, эндпоинт
Как контроллер и эндпоинт выглядят с точки зрения кода разработчиков
RestAssured, Retrofit2 как инструменты для автоматизации тстирования REST API
RestAssured - базовые принципы и пример теста

Part 2
Аутентификация, аутентификация
Сравнение JSON, парсинг средствами JAVA
Моки и стабы
Создаем моки на Mockito
Создаем моки на WireMock

Part 3

Part 4

Part 5


---------------------------------------------------------------------------------------------------- презентация

Part 1
-------------------------
-------------------------
Архитектура
взаимодействие -> путь данных -> уровни оси -> рассматриваем только http
при это есть REST - архитектурный стиль, и есть SOAP - семейство стандартов  и протоколов
-------------------------
Рест
Важно понимать, что REST – это не протокол и не стандарт, а архитектурный стиль. У этого стиля есть свои принципы. Позволю себе скопировать их с понравившегося источника и прокомментировать:
Give every “thing” an ID.
Очччень желательно.
Link things together.
Например, в страницу (представление) о Mercedes C218 хорошо бы добавить ссылку на страницу конкретно о двигателе данной модели, чтобы желающие могли сразу туда перейти, а не тратить время на поиск этой самой страницы.
Use standard methods.
Имеется в виду, экономьте свои силы и деньги заказчика, используйте стандартные методы HTTP, например GET
http://www.example.com/cars/00345
для получения данных вместо определения собственных методов вроде getCar?id=00345.
Resources can have multiple representations.
Одни и те же данные можно вернуть в XML или JSON для программной обработки или обернутыми в красивый дизайн для просмотра человеком.
Communicate statelessly.
Да, RESTful сервис должен быть как идеальный суд – его не должно интересовать ни прошлое подсудимого (клиента), ни будущее – он просто выносит приговор (отвечает на запрос).
-------------------------
CRUD
откуда пошло (все в мире разработки связано хд)
-------------------------
Cервис, контроллер, эндпоинт
~ что-нибудь накидать ><
-------------------------
Cервис, контроллер, эндпоинт
как оно на приктике
-------------------------
Как стучаться к беку
есть много разных способов,
постаман - программка
Restlet client - браузерное расширение
curl/wget - cmd
RestAssured, Retrofit - вызовы из кода
(у скриптовых языков часто есть свои библиотеки для вызовов и тд ~ HttpRequest у groovy)
-------------------------
REstAssured
описание основных методов
-------------------------
практика
-------------------------
-------------------------


Part 2
-------------------------
-------------------------
Аутентификация и авторизация
-------------------------
Виды аутентификации
Basic
Digest
OAuth2
SAML
-------------------------
как передаются данные
json vs xml
???
-------------------------
парсинг джейсона
инструменты
-------------------------
Паттерны для работы с джейсонами
DTO, generator
-------------------------
Практика
-------------------------
-------------------------


Part 3
-------------------------
-------------------------
Паттерны ~ зачем, общий список
-------------------------
Контроллер
-------------------------
Сервис
-------------------------
Абстрактные контроллеры
-------------------------
Практика
-------------------------
-------------------------

Part 4
-------------------------
-------------------------
Как тестировать бек
-------------------------
Бест практис
-------------------------
Вредные советы
-------------------------
Синглтон
-------------------------
Фактори
-------------------------
Контекст
-------------------------
Практика
-------------------------
-------------------------



Part 5
-------------------------
-------------------------
Моки
-------------------------
Стабы
-------------------------
Инструменты
-------------------------
Практика
-------------------------
-------------------------
-------------------------


общие навыки -> авторизация -> парсинг джейсона, создание дто -> инкапсуляция, создание универсального класса запросов и паттерны -> создание контролллеров и отдельных степов

паттерны:
generator
controller
step
singleton
factory
~ service
context


